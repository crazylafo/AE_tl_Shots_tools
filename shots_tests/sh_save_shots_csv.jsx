//has to be execute from the main compositionvar shotName = "SHOT";var comp = app.project.activeItem;var fsProjFolder = app.project.file.parent.fsName;function generateBreakDownFile (){    var csvFilePath =fsProjFolder +"/"+"breakdown.csv"    var csvFile = new File(csvFilePath);    var csvRows = ["SHOTS ", "CAPTURE", "REMARQUES", "STATUS"];    var joinText = csvRows.join(",");     csvFile.open("w");    csvFile.write(joinText);    csvFile.changePath(joinText);    csvFile.close();    return csvFilePath    }function addInfo(destFile,shotClass, pngFile) {    var csvRows = [shotClass.name,pngFile];    var newLine= "\r\n";    var joinText = csvRows.join(",");         var csvFile = File(destFile);        if (csvFile != null) {            csvFile.open("a");            csvFile.write(newLine+joinText);            csvFile.changePath(csvFile);            csvFile.close();        }}function getShotsLayers (comp,shotName){    var shotLayers = [];    for (var i =comp.numLayers; i>=1; i--){        if (comp.layer(i).name.indexOf (shotName) !=-1){                shotClass = {};                shotClass.index = comp.layer(i).index;                shotClass.id = comp.layer(i).id;                shotClass.name =comp.layer(i).name;                shotClass.inPoint =comp.layer(i).inPoint;                                shotLayers.push (shotClass)            }        }    return shotLayers    }function saveShotasPng (comp, shotClass){    var pngPath =fsProjFolder +"/"+shotClass.name + ".png";    comp.saveFrameToPng(shotClass.inPoint, File(fsProjFolder +"/"+shotClass.name + ".png"));    return pngPath;    }if (comp){    var shotsList = getShotsLayers (comp,shotName);    var csvFile = generateBreakDownFile ();    for (var i =0; i< shotsList.length; i++){        var pngFile = saveShotasPng (comp, shotsList[i]);        exportToCsv = addInfo (csvFile,shotsList[i], pngFile);        }        }